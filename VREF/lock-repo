#!/usr/bin/perl

use strict;
use warnings;

use FindBin qw( $RealBin );
use lib $ENV{GL_LIBDIR};
use lib "${RealBin}/../lib";

use Gitolite::Common;
use Gitolite::LockRepo;
use POSIX qw( strftime );

# gitolite VREF to lock and unlock (repository.  Requires companion command
# 'lock-repo' to be enabled.

# ----------------------------------------------------------------------

# see gitolite docs for what the first 7 arguments mean

die "not meant to be run manually" unless $ARGV[6];

my %lock = get_lock(LOCK_FILE);

# (%lock) returns true if the hash has members
if (    (%lock)
    and exists( $lock{USER} )
    and ( $lock{USER} ne $ENV{GL_USER} ) ) {
    my $time = -1;

    if ( defined( $lock{TIME} ) ) {
        $time = localtime( $lock{TIME} );
    }

    my $message = "";

    if ( defined( $lock{MESSAGE} ) ) {
        $message = $lock{MESSAGE};
    }

    _die "Repository locked by '$lock{USER}' since ${time} with message: ${message} ";
}

exit 0
